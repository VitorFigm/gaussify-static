---
import { getCollection } from 'astro:content';
import Base from '@/layouts/Base.astro';
import { Card, CardContent, CardHeader } from '@/components/ui/card';

// Get all blog posts and filter for tech-related ones
const allPosts = await getCollection('blog');

// Filter for tech posts using category field and keywords
const techPosts = allPosts.filter(post => {
  const category = post.data.category;
  const title = post.data.title.toLowerCase();
  const tags = post.data.tags || [];
  
  return category === 'tech' || 
         title.includes('tech') || 
         title.includes('web') || 
         title.includes('ai') || 
         title.includes('development') || 
         title.includes('code') || 
         title.includes('cyber') ||
         tags.some(tag => tag.toLowerCase().includes('tech') || 
                          tag.toLowerCase().includes('ai') || 
                          tag.toLowerCase().includes('web') ||
                          tag.toLowerCase().includes('development'));
});

// Sort tech posts by date
const posts = techPosts.sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

// Pagination setup
const POSTS_PER_PAGE = 6;
const currentPage = 1;
const totalPosts = posts.length;
const totalPages = Math.ceil(totalPosts / POSTS_PER_PAGE);
const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const currentPosts = posts.slice(startIndex, endIndex);

function formatDate(date: Date) {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
}

function getReadingTime(content: string) {
  const wordsPerMinute = 200;
  const words = content.split(' ').length;
  return Math.ceil(words / wordsPerMinute);
}
---

<Base title="Tech Blog - Latest Technology Insights" description="Explore the latest in technology, AI, web development, and digital innovation">
  <main class="min-h-screen bg-background">
    <!-- Header Section -->
    <section class="relative py-20 px-2 bg-primary/10">
       
      
      <div class="container mx-auto max-w-6xl relative z-10">
        <div class="text-center">
          <!-- Breadcrumb -->
          <nav class="flex justify-center mb-8">
            <div class="flex items-center space-x-2 text-sm text-muted-foreground">
              <a href="/" class="hover:text-primary transition-colors">Home</a>
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
              <span class="text-foreground font-medium">Tech Blog</span>
            </div>
          </nav>

          <div class="inline-flex items-center gap-2 bg-primary/10 text-primary border border-primary/20 rounded-full px-4 py-2 text-sm font-medium mb-6">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z" clip-rule="evenodd" />
            </svg>
            Insights de tecnologia
          </div>
          
          <h1 class="text-4xl md:text-6xl font-bold mb-6 bg-clip-text text-primary">
            Tech Blog
          </h1>
          
          <p class="text-xl max-w-3xl mx-auto leading-relaxed">
            Mergulhe nas últimas tendências tecnológicas, inovações em IA, práticas de desenvolvimento web e insights sobre transformação digital que moldam nosso futuro.
          </p>
        </div>
      </div>
    </section>

    <!-- Posts Grid -->
    <section class="relative pb-16 pt-30 px-4">
      <!-- Wave pattern background -->
      <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="absolute top-0 left-0 w-full h-32">
          <svg class="absolute bottom-0 w-full h-32" viewBox="0 0 1200 120" preserveAspectRatio="none">
            <path
              d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"
              opacity=".1"
              fill="currentColor"
              class="text-primary"
            />
          </svg>
        </div>
      </div>
      
      <div class="container mx-auto max-w-6xl relative z-10">
        <!-- Posts Stats -->
        <div class="flex items-center justify-between mb-12">
          <div class="flex items-center gap-6">
            <div class="text-sm text-muted-foreground">
              <span class="font-semibold text-foreground">{totalPosts}</span> articles published
            </div>
            <div class="text-sm text-muted-foreground">
              <span class="font-semibold text-foreground">Page {currentPage}</span> of {totalPages}
            </div>
          </div>
          
          <!-- Filter Tags -->
          <div class="hidden md:flex items-center gap-2">
            <span class="text-sm text-muted-foreground">Popular topics:</span>
            <div class="flex gap-2">
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary">AI</span>
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-secondary/10 text-secondary">Web Dev</span>
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-accent/40 text-accent-foreground">Innovation</span>
            </div>
          </div>
        </div>

        <!-- Posts Grid -->
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
          {currentPosts.map((post, index) => (
            <article class="group cursor-pointer">
              <a href={`/blog/${post.id}`} class="block">
                <Card className="h-full hover:shadow-lg transition-all duration-300 group-hover:scale-[1.02] border-border/50 hover:border-primary/20 overflow-hidden p-0">
                  {post.data.heroImage && (
                    <div class="relative overflow-hidden rounded-t-lg">
                      <img 
                        src={post.data.heroImage.src} 
                        alt={post.data.title}
                        class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
                        loading={index < 3 ? "eager" : "lazy"}
                      />
                      <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
                    </div>
                  )}
                  
                  <CardContent className="pb-6">
                    <div class="flex items-center gap-3 mb-3">
                      <div class="flex items-center gap-2 text-xs text-muted-foreground">
                        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                        </svg>
                        {formatDate(post.data.pubDate)}
                      </div>
                      <div class="flex items-center gap-2 text-xs text-muted-foreground">
                        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                        </svg>
                        {getReadingTime(post.body || '')} min read
                      </div>
                    </div>
                    
                    <h3 class="text-xl font-bold mb-3 text-foreground group-hover:text-primary transition-colors line-clamp-2">
                      {post.data.title}
                    </h3>
                    
                    <p class="text-muted-foreground text-sm line-clamp-3 mb-4">
                      {post.data.description}
                    </p>
                    
                    <div class="flex items-center justify-between">
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary">
                        Technology
                      </span>
                      
                      <div class="flex items-center text-primary font-medium text-sm group-hover:gap-2 transition-all">
                        Read more
                        <svg class="w-4 h-4 ml-1 transition-transform group-hover:translate-x-1" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </a>
            </article>
          ))}
        </div>

        <!-- Pagination -->
        {totalPages > 1 && (
          <div class="flex items-center justify-center gap-2">
            <nav class="flex items-center gap-1" aria-label="Pagination">
              <!-- Previous Page - disabled on page 1 -->
              <div class="inline-flex items-center justify-center w-10 h-10 rounded-lg bg-muted/50 border border-border opacity-50 cursor-not-allowed">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              </div>

              <!-- Page Numbers -->
              {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
                <a
                  href={page === 1 ? '/blog/tech' : `/blog/tech/page/${page}`}
                  class={`inline-flex items-center justify-center w-10 h-10 rounded-lg font-medium transition-all ${
                    page === currentPage
                      ? 'bg-primary text-primary-foreground shadow-sm'
                      : 'bg-card border border-border hover:bg-accent hover:border-primary/20'
                  }`}
                  aria-label={`Page ${page}`}
                  aria-current={page === currentPage ? 'page' : undefined}
                >
                  {page}
                </a>
              ))}

              <!-- Next Page -->
              {currentPage < totalPages && (
                <a 
                  href={`/blog/tech/page/${currentPage + 1}`}
                  class="inline-flex items-center justify-center w-10 h-10 rounded-lg bg-card border border-border hover:bg-accent hover:border-primary/20 transition-all"
                  aria-label="Next page"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                  </svg>
                </a>
              )}
            </nav>
          </div>
        )}
      </div>
    </section>
  </main>

  <style>
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .line-clamp-3 {
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  </style>
</Base>